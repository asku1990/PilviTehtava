{"ast":null,"code":"import _slicedToArray from\"/Users/akik/Documents/PilviTehtava/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ListAdditionInputs(props){/*Täällä luodaan kontrolloitu komponenetti jolloin react määrää arvon joka käytännössä tarkoittaa\n    ettei käyttäjä voi lisätä mitä sattuu input kenttään. */var _useState=useState(0),_useState2=_slicedToArray(_useState,2),quantity=_useState2[0],setQuantity=_useState2[1];// numeroiden liäsys input kenttään\nvar handleQuantityChange=function handleQuantityChange(event){//console.log(event.target.value);\nsetQuantity(event.target.value);};// tekstin lisäys input kenttään\nvar handleDescriptionChange=function handleDescriptionChange(event){props.onDescriptionChange(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\" Paljonko laitetaa \",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:quantity,onChange:handleQuantityChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Mit\\xE4 laitetaa \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:props.descriptionFieldValue,onChange:handleDescriptionChange})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return props.onAddClick(quantity,props.descriptionFieldValue);},children:\"Hyv\\xE4ksy\"})]});}","map":{"version":3,"sources":["/Users/akik/Documents/PilviTehtava/src/components/ListAdditionInputs.js"],"names":["React","useState","ListAdditionInputs","props","quantity","setQuantity","handleQuantityChange","event","target","value","handleDescriptionChange","onDescriptionChange","descriptionFieldValue","onAddClick"],"mappings":"wHAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,C,wFAEA,cAAe,SAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CAC9C;AACJ,4DACI,cAAgCF,QAAQ,CAAC,CAAD,CAAxC,wCAAOG,QAAP,eAAiBC,WAAjB,eAEH;AACG,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CAEpC;AACAF,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CACH,CAJD,CAKJ;AACI,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACH,KAAD,CAAW,CACvCJ,KAAK,CAACQ,mBAAN,CAA0BJ,KAAK,CAACC,MAAN,CAAaC,KAAvC,EACH,CAFD,CAKF,mBAAO,oCACC,0DAAwB,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAGL,QAA7B,CAAwC,QAAQ,CAAGE,oBAAnD,EAAxB,GADD,cAEC,wDAAmB,cAAO,IAAI,CAAC,MAAZ,CAAoB,KAAK,CAAGH,KAAK,CAACS,qBAAlC,CAA0D,QAAQ,CAAGF,uBAArE,EAAnB,GAFD,cAGC,eAAQ,OAAO,CAAG,yBAAMP,CAAAA,KAAK,CAACU,UAAN,CAAiBT,QAAjB,CAA2BD,KAAK,CAACS,qBAAjC,CAAN,EAAlB,wBAHD,GAAP,CAKD","sourcesContent":["import React, {useState} from 'react';\n\nexport default function ListAdditionInputs(props) {\n    /*Täällä luodaan kontrolloitu komponenetti jolloin react määrää arvon joka käytännössä tarkoittaa\n    ettei käyttäjä voi lisätä mitä sattuu input kenttään. */\n    const [quantity, setQuantity] = useState(0);\n\n // numeroiden liäsys input kenttään\n    const handleQuantityChange = (event) => {\n\n        //console.log(event.target.value);\n        setQuantity(event.target.value);\n    }\n// tekstin lisäys input kenttään\n    const handleDescriptionChange = (event) => {\n        props.onDescriptionChange(event.target.value);\n    }\n\n\n  return <div>\n          <div> Paljonko laitetaa <input type=\"number\" value={ quantity } onChange={ handleQuantityChange } /></div>    \n          <div>Mitä laitetaa <input type=\"text\"  value={ props.descriptionFieldValue } onChange={ handleDescriptionChange }/></div>  \n          <button onClick={ () => props.onAddClick(quantity, props.descriptionFieldValue) }>Hyväksy</button> \n  </div>;\n}\n"]},"metadata":{},"sourceType":"module"}