{"ast":null,"code":"import _objectSpread from\"/Users/akik/Documents/PilviTehtava/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/akik/Documents/PilviTehtava/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/akik/Documents/PilviTehtava/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Title from'./components/Title';import ShoppingListContent from'./components/ShoppingListContent';import Header from'./components/Header';import ListAdditionInputs from'./components/ListAdditionInputs';import'./App.css';import{useState}from'react';import Napit from'./components/Napit';import LisaaUusi from'./components/LisaaUusi';//App on juuri komponentti eli hierarkisesti korkein komponenetti\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//Alla olevaa functiota kutsutaa usestate hookiksi. Se lukee ja päivittää laskurin arvoa.\n//tätä voidaan käyttää propsien sisällä ja aliluokissa. \nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),counterValue=_useState2[0],setCounterValue=_useState2[1];var _useState3=useState([// propsissa käytettävä taulukko, sisältö tallennettu olioihin jotta voidaan lisätä ja yliviivata tuotteita listasta\n{id:1,name:\"Maitoa\",qty:4,isChecked:false},{id:2,name:\"Leipää\",qty:5,isChecked:false},{id:3,name:\"Juustoa\",qty:2,isChecked:true}]),_useState4=_slicedToArray(_useState3,2),shoppingListItems=_useState4[0],setShoppingListItems=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];// Tällä funktiolla pystytään muokkaamaan taulukon dataa. sitä käytetään itemClickedEvent propsilla. \n//Tätä kutsutaan myös event käsittelijäksi. \nvar handleItemCheckedToggle=function handleItemCheckedToggle(item){//console.log(\"Toggling item status\");\n//console.log(item);\nvar newShoppinListItems=_toConsumableArray(shoppingListItems);//Luodaan uusi taulukko jonne on tallennettu shoppingListItems taulukko vielä sen vanhoilla arvoilla. \nvar itemClickedIndex=newShoppinListItems.findIndex(function(i){return item.id===i.id;});// i => item.id === i.id on ehto lause joka palauttaa true tai false riippuen lyötyykö item.id listasta vai ei\nif(itemClickedIndex!=-1){//itemClicked.isChecked = !itemClicked.isChecked; //En tajunnut kokonaan mitä vittua tässä tapahtuu.\nvar newElement=_objectSpread({},newShoppinListItems[itemClickedIndex]);newElement.isChecked=!newElement.isChecked;newShoppinListItems[itemClickedIndex]=newElement;setShoppingListItems(newShoppinListItems);}};var onListAddition=function onListAddition(quantity,description){//console.log('onListAddition');\n//console.log(quantity, description);\nvar newShoppinListItems=[].concat(_toConsumableArray(shoppingListItems),[{id:shoppingListItems.length,name:description,qty:quantity,isChecked:false}]);setShoppingListItems(newShoppinListItems);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsxs(\"div\",{children:[\"T\\xE4s\\xE4 laskuri: \",counterValue]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setCounterValue(counterValue+1);},children:\"Laskuri\"}),/*#__PURE__*/_jsx(ListAdditionInputs,{onAddClick:onListAddition,descriptionFieldValue:description,onDescriptionChange:function onDescriptionChange(descriptionValue){return setDescription(descriptionValue);}}),/*#__PURE__*/_jsx(ShoppingListContent,{listItems:shoppingListItems,itemClickedEvent:handleItemCheckedToggle,descriptionFieldValue:description}),/*#__PURE__*/_jsx(Napit,{onAddClick:onListAddition})]});//Aaltosulkujen sisälle props tomintojen muuttujat\n}export default App;","map":{"version":3,"sources":["/Users/akik/Documents/PilviTehtava/src/App.js"],"names":["Title","ShoppingListContent","Header","ListAdditionInputs","useState","Napit","LisaaUusi","App","counterValue","setCounterValue","id","name","qty","isChecked","shoppingListItems","setShoppingListItems","description","setDescription","handleItemCheckedToggle","item","newShoppinListItems","itemClickedIndex","findIndex","i","newElement","onListAddition","quantity","length","descriptionValue"],"mappings":"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","sourcesContent":["import Title from './components/Title'\nimport ShoppingListContent from './components/ShoppingListContent'\nimport Header from './components/Header'\nimport ListAdditionInputs from './components/ListAdditionInputs'\nimport './App.css'\nimport { useState } from 'react'\nimport Napit from './components/Napit'\nimport LisaaUusi from './components/LisaaUusi'\n\n\n//App on juuri komponentti eli hierarkisesti korkein komponenetti\nfunction App() {\n\n\n//Alla olevaa functiota kutsutaa usestate hookiksi. Se lukee ja päivittää laskurin arvoa.\n//tätä voidaan käyttää propsien sisällä ja aliluokissa. \nconst[ counterValue, setCounterValue ] = useState(0);\nconst [ shoppingListItems, setShoppingListItems  ] = useState([\n // propsissa käytettävä taulukko, sisältö tallennettu olioihin jotta voidaan lisätä ja yliviivata tuotteita listasta\n\n  {\n    id:1,\n    name: \"Maitoa\",\n    qty :4,\n    isChecked :false\n  }, \n  {\n    id:2,\n    name: \"Leipää\",\n    qty :5,\n    isChecked :false\n  }, \n  {\n    id:3, \n    name: \"Juustoa\",\n    qty :2,\n    isChecked :true\n  }\n]);\n\n\nconst [description, setDescription] = useState(\"\");\n\n// Tällä funktiolla pystytään muokkaamaan taulukon dataa. sitä käytetään itemClickedEvent propsilla. \n//Tätä kutsutaan myös event käsittelijäksi. \nconst handleItemCheckedToggle = (item) => {\n//console.log(\"Toggling item status\");\n//console.log(item);\n\nlet newShoppinListItems = [...shoppingListItems]; //Luodaan uusi taulukko jonne on tallennettu shoppingListItems taulukko vielä sen vanhoilla arvoilla. \n\nlet itemClickedIndex = newShoppinListItems.findIndex(i => item.id === i.id); // i => item.id === i.id on ehto lause joka palauttaa true tai false riippuen lyötyykö item.id listasta vai ei\nif(itemClickedIndex != -1){\n  //itemClicked.isChecked = !itemClicked.isChecked; //En tajunnut kokonaan mitä vittua tässä tapahtuu.\n  let newElement = {...newShoppinListItems[itemClickedIndex]}\n  newElement.isChecked = !newElement.isChecked;\n  newShoppinListItems[itemClickedIndex] = newElement;\n  setShoppingListItems(newShoppinListItems);\n}\n}\n\nconst onListAddition = (quantity, description) => {\n  //console.log('onListAddition');\n  //console.log(quantity, description);\n\n  let newShoppinListItems = [...shoppingListItems, { \n\n    id: shoppingListItems.length, \n    name: description,\n    qty : quantity,\n    isChecked : false\n\n   }];\n \n  setShoppingListItems(newShoppinListItems);\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Title />\n     \n       <div>Täsä laskuri: { counterValue }</div> \n       <button onClick={()=> setCounterValue(counterValue + 1)}>Laskuri</button> \n  \n      <ListAdditionInputs onAddClick={ onListAddition} \n       descriptionFieldValue={ description }\n       onDescriptionChange={ (descriptionValue) => setDescription(descriptionValue) }\n       />  \n\n  {   <ShoppingListContent listItems={ shoppingListItems } \n      itemClickedEvent={ handleItemCheckedToggle }\n      descriptionFieldValue={ description }\n/> }\n\n      <Napit onAddClick={ onListAddition}\n      />\n\n      \n   { // <LisaaUusi/> tässä on tulossa uusi toiminto joka lisää määriä olemassaolevaan\n}\n\n\n    </div>\n    \n  ); //Aaltosulkujen sisälle props tomintojen muuttujat\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}